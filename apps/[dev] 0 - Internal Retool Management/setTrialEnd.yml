id: setTrialEnd
type: datasource
subtype: RetoolTableQuery
resourceName: '[dev] internal_retool (write)'
template:
  ordered:
    - queryRefreshTime: ''
    - records: ''
    - databasePasswordOverride: ''
    - queryDisabledMessage: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: 0
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - playgroundQueryUuid: ''
    - playgroundQueryId: 0
    - privateParams: []
    - triggersOnSuccess:
        - getOrganization
    - runWhenPageLoadsDelay: ''
    - data: null
    - recordId: ''
    - importedQueryInputs:
        ordered: []
    - showSuccessConfetti: false
    - isImported: false
    - showSuccessToaster: true
    - cacheKeyTtl: ''
    - filterBy: >-
        [{"key":"id","value":"{{
        table1.selectedRow.data.organizationId}}","operation":"="},{"key":"","value":""}]
    - actionType: UPDATE_BY
    - triggersOnFailure: []
    - databaseNameOverride: ''
    - confirmationMessage: null
    - isFetching: false
    - changeset: >-
        [{"key":"trialExpiryDate","value":"{{ moment().add(radiogroup1.value,
        'days')}}"}]
    - rawData: null
    - queryTriggerDelay: '0'
    - watchedParams: []
    - enableBulkUpdates: false
    - timestamp: 0
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - importedQueryInputDefaults:
        ordered: []
    - bulkUpdatePrimaryKey: ''
    - runWhenPageLoads: false
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - tableName: organizations
    - queryTimeout: '10000'
    - requireConfirmation: false
    - enableCaching: false
    - databaseUsernameOverride: ''
    - doNotThrowOnNoOp: false
    - queryThrottleTime: '750'
createdAt: '2019-02-08T12:02:13.761Z'
